{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "build",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "dependsOrder": "sequence",
            "dependsOn": [
                "select-build-target"
            ],
            "problemMatcher": []
        },
        {
            "label": "select-build-target",
            "type": "shell",
            "command": "${input:buildChoice}",
            "problemMatcher": []
        },
        {
            "label": "configure-sam",
            "type": "shell",
            "command": "cmake",
            "args": [
                "-DCMAKE_BUILD_TYPE=Debug",
                "-S", "${workspaceFolder}/sam_inference",
                "-B", "${workspaceFolder}/sam_inference/build"
            ],
            "problemMatcher": ["$gcc"]
        },
        {
            "label": "configure-pipeline",
            "type": "shell",
            "command": "cmake",
            "args": [
                "-DCMAKE_BUILD_TYPE=Debug",
                "-S", "${workspaceFolder}/pipeline",
                "-B", "${workspaceFolder}/pipeline/build"
            ],
            "problemMatcher": ["$gcc"]
        },
        {
            "label": "build-sam",
            "type": "shell",
            "command": "cmake",
            "args": ["--build", "sam_inference/build"],
            "dependsOn": ["configure-sam"],
            "problemMatcher": ["$gcc"],
            "detail": "Build the SAM project using CMake with Debug symbols"
        },
        {
            "label": "build-pipeline",
            "type": "shell",
            "command": "cmake",
            "args": ["--build", "pipeline/build"],
            "dependsOn": ["configure-pipeline"],
            "problemMatcher": ["$gcc"],
            "detail": "Build the Pipeline project using CMake with Debug symbols"
        }
    ],
    "inputs": [
        {
            "id": "buildChoice",
            "type": "command",
            "command": "workbench.action.tasks.runTask",
            "args": "${input:buildTarget}"
        },
        {
            "id": "buildTarget",
            "type": "pickString",
            "description": "Which project do you want to build?",
            "options": ["build-sam", "build-pipeline"],
            "default": "build-pipeline"
        }
    ]
}